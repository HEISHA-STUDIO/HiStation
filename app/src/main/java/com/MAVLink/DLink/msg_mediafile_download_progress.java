/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE MEDIAFILE_DOWNLOAD_PROGRESS PACKING
package com.MAVLink.DLink;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Indicate the progress of a download process.
*/
public class msg_mediafile_download_progress extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS = 156;
    public static final int MAVLINK_MSG_LENGTH = 22;
    private static final long serialVersionUID = MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS;


      
    /**
    * The filename of the mediafile.
    */
    public byte file_name[] = new byte[20];
      
    /**
    * 
    */
    public short process;
      
    /**
    * 
    */
    public short percent;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 1;
        packet.compid = 1;
        packet.msgid = MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS;
              
        
        for (int i = 0; i < file_name.length; i++) {
            packet.payload.putByte(file_name[i]);
        }
                    
              
        packet.payload.putUnsignedByte(process);
              
        packet.payload.putUnsignedByte(percent);
        
        return packet;
    }

    /**
    * Decode a mediafile_download_progress message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
         
        for (int i = 0; i < this.file_name.length; i++) {
            this.file_name[i] = payload.getByte();
        }
                
              
        this.process = payload.getUnsignedByte();
              
        this.percent = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_mediafile_download_progress(){
        msgid = MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_mediafile_download_progress(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS;
        unpack(mavLinkPacket.payload);        
    }

     
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setFile_Name(String str) {
        int len = Math.min(str.length(), 20);
        for (int i=0; i<len; i++) {
            file_name[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<20; i++) {            // padding for the rest of the buffer
            file_name[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getFile_Name() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 20; i++) {
            if (file_name[i] != 0)
                buf.append((char) file_name[i]);
            else
                break;
        }
        return buf.toString();

    }
                             
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_MEDIAFILE_DOWNLOAD_PROGRESS - sysid:"+sysid+" compid:"+compid+" file_name:"+file_name+" process:"+process+" percent:"+percent+"";
    }
}
        