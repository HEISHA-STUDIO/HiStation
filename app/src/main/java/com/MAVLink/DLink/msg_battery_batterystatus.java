/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE BATTERY_batterySTATUS PACKING
package com.MAVLink.DLink;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Battery information. Updates GCS with flight controller battery status. Use SMART_BATTERY_* messages instead for smart batteries.
*/
public class msg_battery_batterystatus extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_BATTERY_batterySTATUS = 147;
    public static final int MAVLINK_MSG_LENGTH = 10;
    private static final long serialVersionUID = MAVLINK_MSG_ID_BATTERY_batterySTATUS;


      
    /**
    * Total estimated time.
    */
    public int time_total;
      
    /**
    * Remaining battery time, 0: autopilot does not provide remaining battery time estimate
    */
    public int time_remaining;
      
    /**
    * Remaining battery energy. Values: [0-100], -1: autopilot does not estimate the remaining battery.
    */
    public byte battery_remaining;
      
    /**
    * State for extent of discharge, provided by autopilot for warning or external reactions
    */
    public short charge_state;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 1;
        packet.compid = 1;
        packet.msgid = MAVLINK_MSG_ID_BATTERY_batterySTATUS;
              
        packet.payload.putInt(time_total);
              
        packet.payload.putInt(time_remaining);
              
        packet.payload.putByte(battery_remaining);
              
        packet.payload.putUnsignedByte(charge_state);
        
        return packet;
    }

    /**
    * Decode a battery_batterystatus message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_total = payload.getInt();
              
        this.time_remaining = payload.getInt();
              
        this.battery_remaining = payload.getByte();
              
        this.charge_state = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_battery_batterystatus(){
        msgid = MAVLINK_MSG_ID_BATTERY_batterySTATUS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_battery_batterystatus(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_BATTERY_batterySTATUS;
        unpack(mavLinkPacket.payload);        
    }

            
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_BATTERY_batterySTATUS - sysid:"+sysid+" compid:"+compid+" time_total:"+time_total+" time_remaining:"+time_remaining+" battery_remaining:"+battery_remaining+" charge_state:"+charge_state+"";
    }
}
        